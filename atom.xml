<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>It&#39;s raining</title>
  
  
  <link href="https://tifa-chen.github.io/atom.xml" rel="self"/>
  
  <link href="https://tifa-chen.github.io/"/>
  <updated>2021-06-20T09:50:10.600Z</updated>
  <id>https://tifa-chen.github.io/</id>
  
  <author>
    <name>Csh</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>权限过滤器</title>
    <link href="https://tifa-chen.github.io/2021/06/20/%E6%9D%83%E9%99%90%E8%BF%87%E6%BB%A4%E5%99%A8/"/>
    <id>https://tifa-chen.github.io/2021/06/20/%E6%9D%83%E9%99%90%E8%BF%87%E6%BB%A4%E5%99%A8/</id>
    <published>2021-06-20T08:04:51.000Z</published>
    <updated>2021-06-20T09:50:10.600Z</updated>
    
    <content type="html"><![CDATA[<h1 id="权限过滤器"><a href="#权限过滤器" class="headerlink" title="权限过滤器"></a>权限过滤器</h1><h2 id="1、什么是权限过滤器-Filter-？"><a href="#1、什么是权限过滤器-Filter-？" class="headerlink" title="1、什么是权限过滤器(Filter)？"></a>1、什么是权限过滤器(Filter)？</h2><p>Filter主要是用于用户对请求进行预处理，即就是当你访问某个网站的主页时先判断你有没有处于登录状态，你不能直接通过访问主页的地址来直接访问，而是必须处于登录状态。</p><p>换句话说：就是当你想要去银行取钱那么你就必须输入账户密码！！！</p><h2 id="2、如何实现一个Filter"><a href="#2、如何实现一个Filter" class="headerlink" title="2、如何实现一个Filter"></a>2、如何实现一个Filter</h2><p>首先你需要编写三个界面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 登录页面</span><br><span class="line">- 错误页面（即登录失败的页面）</span><br><span class="line">- 成功页面</span><br></pre></td></tr></table></figure><h3 id="实现的原理："><a href="#实现的原理：" class="headerlink" title="实现的原理："></a>实现的原理：</h3><p>当你运行你的项目会出现登录页面，当你输入的用户名正确的话，跳转到登录成功的页面，失败的话就跳转到登录失败的页面，但是你不能直接输入登录成功页面的地址来直接访问登录页面。即当你跳转到登录页面之前，系统会对你的状态进行判断，判断你是否处于登录状态。</p><h2 id="3、接下来写代码"><a href="#3、接下来写代码" class="headerlink" title="3、接下来写代码"></a>3、接下来写代码</h2><ul><li>这个是登录页面</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620164953.png"></p><ul><li>这个是处理登录时的请求，判断是否登录成功</li></ul><blockquote><p>因为要是判断登录是否成功要连接数据库 这里就先不连了</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620165425.png"></p><ul><li><p>配置Servlet</p><p><img src="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620165714.png"></p></li></ul><blockquote><p>这个时候你就可以运行项目尝试一下了 ，当你输入root的时候，会跳转到success.jsp， 输入其他的话就会跳转到error.jsp</p></blockquote><p>但是这个时候你会发现，就算你没有登录，你直接访问success.jsp的地址也会显示登录成功    </p><p><img src="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620170213.png"></p><blockquote><p>这个就相当于你没有登录银行的账号你就可以直接去取钱，这个在现实中是绝对不允许的！！！</p><p>这个时候就需要当你访问success.jsp的时候判断你是否处于登录状态，从而决定是否让你访问该页面</p></blockquote><h2 id="4、Filter的实现（核心）"><a href="#4、Filter的实现（核心）" class="headerlink" title="4、Filter的实现（核心）"></a>4、Filter的实现（核心）</h2><ul><li>核心代码</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620173011.png"></p><ul><li>在web.xml中进行这个Filter的配置</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620173346.png"></p><p>至此，当你再重启项目，继续通过访问success.jsp的路径来访问该页面的话就会直接跳转到错误页面，实现了权限拦截的功能！！！</p><blockquote><p>注销登录状态，即移除session中的  “USER” </p></blockquote><ul><li>在登录成功页面增加注销的超链接</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620174645.png"></p><ul><li>实现注销的功能，编写相应的servlet</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620174803.png"></p><ul><li>配置web.xml</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620174932.png"></p><blockquote><p>至此完结…..</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;权限过滤器&quot;&gt;&lt;a href=&quot;#权限过滤器&quot; class=&quot;headerlink&quot; title=&quot;权限过滤器&quot;&gt;&lt;/a&gt;权限过滤器&lt;/h1&gt;&lt;h2 id=&quot;1、什么是权限过滤器-Filter-？&quot;&gt;&lt;a href=&quot;#1、什么是权限过滤器-Filter-？&quot; c</summary>
      
    
    
    
    
    <category term="java Filter" scheme="https://tifa-chen.github.io/tags/java-Filter/"/>
    
  </entry>
  
  <entry>
    <title>个人部署博客网站过程</title>
    <link href="https://tifa-chen.github.io/2021/06/20/%E4%B8%AA%E4%BA%BA%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B/"/>
    <id>https://tifa-chen.github.io/2021/06/20/%E4%B8%AA%E4%BA%BA%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B/</id>
    <published>2021-06-20T07:24:55.000Z</published>
    <updated>2021-06-20T07:31:20.940Z</updated>
    
    <content type="html"><![CDATA[<h1 id="个人部署博客网站过程"><a href="#个人部署博客网站过程" class="headerlink" title="个人部署博客网站过程"></a>个人部署博客网站过程</h1><blockquote><p>将本地搭建的Hexo博客部署到Github个人主页（Git Pages）</p></blockquote><h2 id="1、首先你需要一个GitHub账号"><a href="#1、首先你需要一个GitHub账号" class="headerlink" title="1、首先你需要一个GitHub账号"></a>1、首先你需要一个GitHub账号</h2><p>直接在这个<a href="https://github.com/">GitHub</a>官网里面注册即可</p><br/><h2 id="2、你需要建立一个仓库-repository"><a href="#2、你需要建立一个仓库-repository" class="headerlink" title="2、你需要建立一个仓库(repository)"></a>2、你需要建立一个仓库(repository)</h2><p><img src="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620101846.png"></p><p><img src="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620102232.png"></p><br/><h2 id="3、-你需要其他准备工作"><a href="#3、-你需要其他准备工作" class="headerlink" title="3、 你需要其他准备工作"></a>3、 你需要其他准备工作</h2><ul><li><p><a href="https://blog.csdn.net/qq_43285335/article/details/90696126">安装node,js</a></p></li><li><p><a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">安装git</a></p></li><li><p>然后你需要下载【hexo-script】的安装脚本</p><p>这边建议新建一个文件夹  ，然后打开git bash 然后执行下面这条命令即可</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -O https://cdn.jsdelivr.net/gh/kjhuanhao/hexo-script@master/install.sh</span><br></pre></td></tr></table></figure><p>  但我更建议你直接在<a href="https://github.com/kjhuanhao/hexo-script/releases">release</a>里面下载  会更快一点 </p><p>  <img src="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620102333.png"></p></li></ul><br/><h2 id="4、一键安装hexo博客"><a href="#4、一键安装hexo博客" class="headerlink" title="4、一键安装hexo博客"></a>4、一键安装hexo博客</h2><h3 id="hexo-win-的使用"><a href="#hexo-win-的使用" class="headerlink" title="hexo_win 的使用"></a>hexo_win 的使用</h3><p>您需要在存放install.sh脚本的目录中,右键打开git bash运行以下命令:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> install.sh hexo_win</span><br></pre></td></tr></table></figure><blockquote><p>这个大约需要两三分钟  不要着急！！！</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620102427.png">图片4</a></p><br/><h3 id="此时你可以运行hexo-s来查看你的博客"><a href="#此时你可以运行hexo-s来查看你的博客" class="headerlink" title="此时你可以运行hexo s来查看你的博客"></a>此时你可以运行hexo s来查看你的博客</h3><blockquote><p>但首先你需要先cd 到 hexoblog  才可以执行上面的命令</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620102511.png">图片5</a></p><br/><blockquote><p>此时你会出现类似于这样子的界面</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620102635.png">图片6</a></p><br/><br/><h2 id="5、生成SSH秘钥"><a href="#5、生成SSH秘钥" class="headerlink" title="5、生成SSH秘钥"></a>5、生成SSH秘钥</h2><br/><h3 id="git-ssh的使用"><a href="#git-ssh的使用" class="headerlink" title="git_ssh的使用"></a>git_ssh的使用</h3><p>你需要在存放install.sh的脚本目录中，右键打开git bash运行以下的命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./install.sh git_ssh</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620102701.png"></p><br/><br/><h2 id="6、部署hexo博客"><a href="#6、部署hexo博客" class="headerlink" title="6、部署hexo博客"></a>6、部署hexo博客</h2><p>up.sh的使用</p><blockquote><p>在这之前你需要确认你已经配置了SSH秘钥</p></blockquote><br/><p>您需要在存放install.sh脚本的目录中,右键打开git bash运行以下命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> install.sh deploy</span><br></pre></td></tr></table></figure><br/><p>那么你的那个目录下面会生成一个up.sh的文件</p><p><img src="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620102747.png"></p><blockquote><p>其次，你需要将up.sh复制到hexoblog文件夹下面，也就是复制到你的博客根目录下面</p></blockquote><br/><p>然后你需要打开hexoblog下面的文件  _config.yml</p><blockquote><p>找到deploy， 按照一下格式修改</p></blockquote><br/><p><img src="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620102817.png"></p><br/><p><img src="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620102905.png"></p><br/><p><strong>注意（下面的非常重要！！！）：</strong></p><br/><p>你需要再进行以下的操作，</p><p>点击你的仓库  –&gt;  Settings  –&gt;  Pages   ,  按照以下方式修改</p><p><a href="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620102936.png">图片11</a></p><h2 id="7、最后一步"><a href="#7、最后一步" class="headerlink" title="7、最后一步"></a>7、最后一步</h2><br/><p>在hexoblog文件夹下面   右键  git bash</p><blockquote><p>生成静态文件</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><blockquote><p>部署</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><br/><p>最后提示这个代表成功！！！</p><p><img src="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620103016.png"></p><br/><p>你就可以直接访问   <username>.github.io  来访问你的博客了！！！</p><p><img src="https://cdn.jsdelivr.net/gh/TIFA-Chen/pic/img/20210620103100.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;个人部署博客网站过程&quot;&gt;&lt;a href=&quot;#个人部署博客网站过程&quot; class=&quot;headerlink&quot; title=&quot;个人部署博客网站过程&quot;&gt;&lt;/a&gt;个人部署博客网站过程&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;将本地搭建的Hexo博客部署到Github个人主页</summary>
      
    
    
    
    
    <category term="blog" scheme="https://tifa-chen.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://tifa-chen.github.io/2021/06/19/hello-world/"/>
    <id>https://tifa-chen.github.io/2021/06/19/hello-world/</id>
    <published>2021-06-19T02:03:02.340Z</published>
    <updated>2021-06-19T02:03:02.340Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>POSTNAME</title>
    <link href="https://tifa-chen.github.io/2013/12/02/my-first-blog/"/>
    <id>https://tifa-chen.github.io/2013/12/02/my-first-blog/</id>
    <published>2013-12-02T07:30:16.000Z</published>
    <updated>2021-06-20T07:33:25.610Z</updated>
    
    <content type="html"><![CDATA[<p>以下是正文<br>文章，1984年6月26日出生于陕西省西安市，中国内地男演员、导演。2006年毕业于中央戏剧学院表演系。<br>2004年参演电视剧《与青春有关的日子》，开始在影视圈崭露头角 [1]  。2005年拍摄古装剧《锦衣卫》。2007年主演赵宝刚导演的青春剧《奋斗》； [2]  同年，主演首部电影《走着瞧》。2008年主演滕华涛执导的电视剧《蜗居》，饰演80后城市青年小贝。 [1]  [3]  2009年，在电影《海洋天堂》中扮演自闭症患者王大福；同年参演抗战题材的电视剧《雪豹》 [4]  。2011年，主演的电视剧《裸婚时代》在各大卫视播出； [5]  2011年-2012年连续2年获得北京大学生电影节 [6-7]  最受大学生欢迎男演员奖。2012年，凭借电影《失恋33天》获得第31届大众电影百花奖最佳男主角奖； [8]  同年成立自己经营的北京君竹影视文化有限公司，并导演第一部影视作品《小爸爸》。2013年2月，主演的电影《西游·降魔篇》在全国上映。 [9]<br>2014年3月28日，主演的中韩合资文艺爱情片《我在路上最爱你》在全国上映。2014年12月18日，在姜文执导的动作喜剧片《一步之遥》中扮演武七一角。 [10]  2016年，主演电视剧《少帅》，饰演张学良 [11]  ；主演电视剧《剃刀边缘》 [12]  。7月15日导演的电影《陆垚知马俐》上映。 [13]<br>演艺事业外，文章也参与公益慈善事业，2010年成立大福自闭症关爱基金。<br>2017年9月16日，凭借《陆垚知马俐》获得第31届中国电影金鸡奖导演处女作奖 [14]  。<br>2019年7月28日，文章通过微博宣布，与妻子马伊琍离婚 [15] </p>]]></content>
    
    
    <summary type="html">附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</summary>
    
    
    
    <category term="默认分类" scheme="https://tifa-chen.github.io/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="tag1" scheme="https://tifa-chen.github.io/tags/tag1/"/>
    
    <category term="tag2" scheme="https://tifa-chen.github.io/tags/tag2/"/>
    
    <category term="tag3" scheme="https://tifa-chen.github.io/tags/tag3/"/>
    
  </entry>
  
</feed>
